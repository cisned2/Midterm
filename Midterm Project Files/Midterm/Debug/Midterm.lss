
Midterm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800100  00000b4e  00000be2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b4e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  008001be  008001be  00000ca0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d37  00000000  00000000  00000d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000851  00000000  00000000  00001a87  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000431  00000000  00000000  000022d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  0000270c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000481  00000000  00000000  0000278c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003b0  00000000  00000000  00002c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00002fbd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__ftoa_engine+0x96>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtoa_prf+0x36>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <main+0x1be>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <init_USART+0x1a>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	ee e4       	ldi	r30, 0x4E	; 78
 176:	fb e0       	ldi	r31, 0x0B	; 11
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	ae 3b       	cpi	r26, 0xBE	; 190
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	ae eb       	ldi	r26, 0xBE	; 190
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	a6 3c       	cpi	r26, 0xC6	; 198
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 11 01 	call	0x222	; 0x222 <main>
 198:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <put_char>:
	}
}

static int put_char(char c, FILE *stream)
{
	while(!(UCSR0A &(1<<UDRE0))); // wait for UDR to be clear
 1a0:	e0 ec       	ldi	r30, 0xC0	; 192
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	90 81       	ld	r25, Z
 1a6:	95 ff       	sbrs	r25, 5
 1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <put_char+0x4>
	UDR0 = c;    //send the character
 1aa:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	08 95       	ret

000001b4 <init_USART>:
void init_USART(){
	unsigned int BAUDrate;

	//set BAUD rate: UBRR = [F_CPU/(16*BAUD)]-1
	BAUDrate = ((F_CPU/16)/BAUD) - 1;
	UBRR0H = (unsigned char) (BAUDrate >> 8); //shift top 8 bits into UBRR0H
 1b4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char) BAUDrate; //shift rest of 8 bits into UBRR0L
 1b8:	83 e3       	ldi	r24, 0x33	; 51
 1ba:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //enable receiver and trasmitter
 1be:	e1 ec       	ldi	r30, 0xC1	; 193
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	88 61       	ori	r24, 0x18	; 24
 1c6:	80 83       	st	Z, r24
	// UCSR0B |= (1 << RXCIE0); //enable receiver interrupt
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); //set data frame: 8 bit, 1 stop
 1c8:	e2 ec       	ldi	r30, 0xC2	; 194
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	86 60       	ori	r24, 0x06	; 6
 1d0:	80 83       	st	Z, r24
 1d2:	08 95       	ret

000001d4 <init_ADC>:
}

void init_ADC(){
	ADMUX = 0; //use ADC0
 1d4:	ec e7       	ldi	r30, 0x7C	; 124
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0); //use AVcc as the reference (5V)
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
	//ADMUX |= (1 << ADLAR); //set to right adjust for 8-bit ADC

	//ADCSRA |= (1 << ADIE); //ADC interrupt enable
	ADCSRA |= (1 << ADEN); //enable ADC
 1e0:	ea e7       	ldi	r30, 0x7A	; 122
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	80 68       	ori	r24, 0x80	; 128
 1e8:	80 83       	st	Z, r24
	
	//set pre-scale to 128 for input frequency
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
 1ea:	80 81       	ld	r24, Z
 1ec:	87 60       	ori	r24, 0x07	; 7
 1ee:	80 83       	st	Z, r24
	
	ADCSRB = 0; //free running mode
 1f0:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
 1f4:	08 95       	ret

000001f6 <USART_tx_string>:
}

void USART_tx_string(char* data){
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
	while((*data!='\0')){ //print until null
 1fa:	fc 01       	movw	r30, r24
 1fc:	20 81       	ld	r18, Z
 1fe:	22 23       	and	r18, r18
 200:	69 f0       	breq	.+26     	; 0x21c <USART_tx_string+0x26>
 202:	dc 01       	movw	r26, r24
 204:	11 96       	adiw	r26, 0x01	; 1
		while(!(UCSR0A &(1<<UDRE0))); //check if transmit buffer is ready for new data
 206:	e0 ec       	ldi	r30, 0xC0	; 192
 208:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=*data; //print char at current pointer
 20a:	c6 ec       	ldi	r28, 0xC6	; 198
 20c:	d0 e0       	ldi	r29, 0x00	; 0
	ADCSRB = 0; //free running mode
}

void USART_tx_string(char* data){
	while((*data!='\0')){ //print until null
		while(!(UCSR0A &(1<<UDRE0))); //check if transmit buffer is ready for new data
 20e:	90 81       	ld	r25, Z
 210:	95 ff       	sbrs	r25, 5
 212:	fd cf       	rjmp	.-6      	; 0x20e <USART_tx_string+0x18>
		UDR0=*data; //print char at current pointer
 214:	28 83       	st	Y, r18
	
	ADCSRB = 0; //free running mode
}

void USART_tx_string(char* data){
	while((*data!='\0')){ //print until null
 216:	2d 91       	ld	r18, X+
 218:	21 11       	cpse	r18, r1
 21a:	f9 cf       	rjmp	.-14     	; 0x20e <USART_tx_string+0x18>
		while(!(UCSR0A &(1<<UDRE0))); //check if transmit buffer is ready for new data
		UDR0=*data; //print char at current pointer
		data++; //iterate char pointer
	}
}
 21c:	df 91       	pop	r29
 21e:	cf 91       	pop	r28
 220:	08 95       	ret

00000222 <main>:
 char CIPSEND[] = "AT+CIPSEND=0,48\r\n";
 char SENDDATA[] = "GET /update?key=SFMSNLTJWNDH5Y6L&field1=";
 char CIPCLOSE[] = "AT+CIPCLOSE\r\n";

int main(void)
{
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
 22a:	29 97       	sbiw	r28, 0x09	; 9
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	f8 94       	cli
 230:	de bf       	out	0x3e, r29	; 62
 232:	0f be       	out	0x3f, r0	; 63
 234:	cd bf       	out	0x3d, r28	; 61
	float ADCvalue; //holds converted ADC value
	 char c[9]; //holds converted value in string

	stdout = &mystdout; //set the output stream
 236:	88 ea       	ldi	r24, 0xA8	; 168
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <__iob+0x3>
 23e:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <__iob+0x2>

	init_USART();  
 242:	0e 94 da 00 	call	0x1b4	; 0x1b4 <init_USART>
	init_ADC();
 246:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <init_ADC>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	2f ef       	ldi	r18, 0xFF	; 255
 24c:	82 e5       	ldi	r24, 0x52	; 82
 24e:	97 e0       	ldi	r25, 0x07	; 7
 250:	21 50       	subi	r18, 0x01	; 1
 252:	80 40       	sbci	r24, 0x00	; 0
 254:	90 40       	sbci	r25, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0x2e>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x38>
 25a:	00 00       	nop

	_delay_ms(300);
	printf("AT\r\n");
 25c:	86 eb       	ldi	r24, 0xB6	; 182
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	0e 94 0c 03 	call	0x618	; 0x618 <puts>
 264:	ef ef       	ldi	r30, 0xFF	; 255
 266:	f3 ed       	ldi	r31, 0xD3	; 211
 268:	20 e3       	ldi	r18, 0x30	; 48
 26a:	e1 50       	subi	r30, 0x01	; 1
 26c:	f0 40       	sbci	r31, 0x00	; 0
 26e:	20 40       	sbci	r18, 0x00	; 0
 270:	e1 f7       	brne	.-8      	; 0x26a <main+0x48>
 272:	00 c0       	rjmp	.+0      	; 0x274 <main+0x52>
 274:	00 00       	nop
	//USART_tx_string(AT); //test AT command
	_delay_ms(2000);	
	USART_tx_string(ATCWMODE);//change to client mode
 276:	8a e9       	ldi	r24, 0x9A	; 154
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 27e:	8f ef       	ldi	r24, 0xFF	; 255
 280:	93 ed       	ldi	r25, 0xD3	; 211
 282:	e0 e3       	ldi	r30, 0x30	; 48
 284:	81 50       	subi	r24, 0x01	; 1
 286:	90 40       	sbci	r25, 0x00	; 0
 288:	e0 40       	sbci	r30, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x62>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x6c>
 28e:	00 00       	nop
	_delay_ms(2000);
	USART_tx_string(ATCWJAP); //connect to wifi
 290:	85 e8       	ldi	r24, 0x85	; 133
 292:	91 e0       	ldi	r25, 0x01	; 1
 294:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 298:	ff ef       	ldi	r31, 0xFF	; 255
 29a:	2f e4       	ldi	r18, 0x4F	; 79
 29c:	83 ec       	ldi	r24, 0xC3	; 195
 29e:	f1 50       	subi	r31, 0x01	; 1
 2a0:	20 40       	sbci	r18, 0x00	; 0
 2a2:	80 40       	sbci	r24, 0x00	; 0
 2a4:	e1 f7       	brne	.-8      	; 0x29e <main+0x7c>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0x86>
 2a8:	00 00       	nop
	_delay_ms(8000);	
	USART_tx_string(CIPMUX); //multiple connection set
 2aa:	87 e7       	ldi	r24, 0x77	; 119
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 2b2:	9f ef       	ldi	r25, 0xFF	; 255
 2b4:	eb e7       	ldi	r30, 0x7B	; 123
 2b6:	f2 e9       	ldi	r31, 0x92	; 146
 2b8:	91 50       	subi	r25, 0x01	; 1
 2ba:	e0 40       	sbci	r30, 0x00	; 0
 2bc:	f0 40       	sbci	r31, 0x00	; 0
 2be:	e1 f7       	brne	.-8      	; 0x2b8 <main+0x96>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <main+0xa0>
 2c2:	00 00       	nop
	_delay_ms(6000);
	
	while(1){
		ADCSRA |= (1 << ADSC); //start the conversion. while in free running mode it will
 2c4:	0f 2e       	mov	r0, r31
 2c6:	fa e7       	ldi	r31, 0x7A	; 122
 2c8:	ef 2e       	mov	r14, r31
 2ca:	f1 2c       	mov	r15, r1
 2cc:	f0 2d       	mov	r31, r0
		while((ADCSRA&(1 << ADIF))==0); //check if conversion done
		ADCSRA |= (1 << ADIF); //reset flag
		ADCvalue = ADC & 0x03ff; //grab all 10 bits from ADC
 2ce:	0f 2e       	mov	r0, r31
 2d0:	f8 e7       	ldi	r31, 0x78	; 120
 2d2:	cf 2e       	mov	r12, r31
 2d4:	d1 2c       	mov	r13, r1
 2d6:	f0 2d       	mov	r31, r0
	_delay_ms(8000);	
	USART_tx_string(CIPMUX); //multiple connection set
	_delay_ms(6000);
	
	while(1){
		ADCSRA |= (1 << ADSC); //start the conversion. while in free running mode it will
 2d8:	f7 01       	movw	r30, r14
 2da:	80 81       	ld	r24, Z
 2dc:	80 64       	ori	r24, 0x40	; 64
 2de:	80 83       	st	Z, r24
		while((ADCSRA&(1 << ADIF))==0); //check if conversion done
 2e0:	f7 01       	movw	r30, r14
 2e2:	80 81       	ld	r24, Z
 2e4:	84 ff       	sbrs	r24, 4
 2e6:	fc cf       	rjmp	.-8      	; 0x2e0 <main+0xbe>
		ADCSRA |= (1 << ADIF); //reset flag
 2e8:	80 81       	ld	r24, Z
 2ea:	80 61       	ori	r24, 0x10	; 16
 2ec:	80 83       	st	Z, r24
		ADCvalue = ADC & 0x03ff; //grab all 10 bits from ADC
 2ee:	f6 01       	movw	r30, r12
 2f0:	60 81       	ld	r22, Z
 2f2:	71 81       	ldd	r23, Z+1	; 0x01
		ADCvalue = ((ADCvalue * 5)/1024)*100; //convert to degrees Fahrenheit
		
		//itoa(ADCvalue, c, 10); //convert int to string
		
		if(timer==3){
 2f4:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <__data_end>
 2f8:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <__data_end+0x1>
 2fc:	03 97       	sbiw	r24, 0x03	; 3
 2fe:	09 f0       	breq	.+2      	; 0x302 <main+0xe0>
 300:	66 c0       	rjmp	.+204    	; 0x3ce <main+0x1ac>
			timer = 0; //reset timer
 302:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <__data_end+0x1>
 306:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <__data_end>
 30a:	ff ef       	ldi	r31, 0xFF	; 255
 30c:	29 e6       	ldi	r18, 0x69	; 105
 30e:	88 e1       	ldi	r24, 0x18	; 24
 310:	f1 50       	subi	r31, 0x01	; 1
 312:	20 40       	sbci	r18, 0x00	; 0
 314:	80 40       	sbci	r24, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0xee>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0xf8>
 31a:	00 00       	nop
	while(1){
		ADCSRA |= (1 << ADSC); //start the conversion. while in free running mode it will
		while((ADCSRA&(1 << ADIF))==0); //check if conversion done
		ADCSRA |= (1 << ADIF); //reset flag
		ADCvalue = ADC & 0x03ff; //grab all 10 bits from ADC
		ADCvalue = ((ADCvalue * 5)/1024)*100; //convert to degrees Fahrenheit
 31c:	73 70       	andi	r23, 0x03	; 3
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__floatunsisf>
 326:	20 e0       	ldi	r18, 0x00	; 0
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	40 ea       	ldi	r20, 0xA0	; 160
 32c:	50 e4       	ldi	r21, 0x40	; 64
 32e:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
 332:	20 e0       	ldi	r18, 0x00	; 0
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	40 e8       	ldi	r20, 0x80	; 128
 338:	5a e3       	ldi	r21, 0x3A	; 58
 33a:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
		
		if(timer==3){
			timer = 0; //reset timer

			_delay_ms(1000);		
			dtostrf(ADCvalue,3,1,c); //convert double to string
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	48 ec       	ldi	r20, 0xC8	; 200
 344:	52 e4       	ldi	r21, 0x42	; 66
 346:	0e 94 2e 02 	call	0x45c	; 0x45c <__mulsf3>
 34a:	8e 01       	movw	r16, r28
 34c:	0f 5f       	subi	r16, 0xFF	; 255
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	21 e0       	ldi	r18, 0x01	; 1
 352:	43 e0       	ldi	r20, 0x03	; 3
 354:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <dtostrf>
			
			USART_tx_string(CIPSTART);
 358:	89 e4       	ldi	r24, 0x49	; 73
 35a:	91 e0       	ldi	r25, 0x01	; 1
 35c:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 360:	9f ef       	ldi	r25, 0xFF	; 255
 362:	e3 ed       	ldi	r30, 0xD3	; 211
 364:	f0 e3       	ldi	r31, 0x30	; 48
 366:	91 50       	subi	r25, 0x01	; 1
 368:	e0 40       	sbci	r30, 0x00	; 0
 36a:	f0 40       	sbci	r31, 0x00	; 0
 36c:	e1 f7       	brne	.-8      	; 0x366 <main+0x144>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0x14e>
 370:	00 00       	nop
			_delay_ms(2000);
			USART_tx_string(CIPSEND);
 372:	87 e3       	ldi	r24, 0x37	; 55
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 37a:	2f ef       	ldi	r18, 0xFF	; 255
 37c:	87 ea       	ldi	r24, 0xA7	; 167
 37e:	91 e6       	ldi	r25, 0x61	; 97
 380:	21 50       	subi	r18, 0x01	; 1
 382:	80 40       	sbci	r24, 0x00	; 0
 384:	90 40       	sbci	r25, 0x00	; 0
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0x15e>
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0x168>
 38a:	00 00       	nop
			_delay_ms(4000);
			USART_tx_string(SENDDATA);
 38c:	8e e0       	ldi	r24, 0x0E	; 14
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
			USART_tx_string(c);
 394:	c8 01       	movw	r24, r16
 396:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
			USART_tx_string("\r\n");
 39a:	8a eb       	ldi	r24, 0xBA	; 186
 39c:	91 e0       	ldi	r25, 0x01	; 1
 39e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 3a2:	ef ef       	ldi	r30, 0xFF	; 255
 3a4:	f3 ed       	ldi	r31, 0xD3	; 211
 3a6:	20 e3       	ldi	r18, 0x30	; 48
 3a8:	e1 50       	subi	r30, 0x01	; 1
 3aa:	f0 40       	sbci	r31, 0x00	; 0
 3ac:	20 40       	sbci	r18, 0x00	; 0
 3ae:	e1 f7       	brne	.-8      	; 0x3a8 <main+0x186>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <main+0x190>
 3b2:	00 00       	nop
			_delay_ms(2000);
			USART_tx_string(CIPCLOSE);
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	91 e0       	ldi	r25, 0x01	; 1
 3b8:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <USART_tx_string>
 3bc:	8f ef       	ldi	r24, 0xFF	; 255
 3be:	99 e6       	ldi	r25, 0x69	; 105
 3c0:	e8 e1       	ldi	r30, 0x18	; 24
 3c2:	81 50       	subi	r24, 0x01	; 1
 3c4:	90 40       	sbci	r25, 0x00	; 0
 3c6:	e0 40       	sbci	r30, 0x00	; 0
 3c8:	e1 f7       	brne	.-8      	; 0x3c2 <main+0x1a0>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <main+0x1aa>
 3cc:	00 00       	nop
			_delay_ms(1000); //wait 1s
		}
		timer++;
 3ce:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <__data_end>
 3d2:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <__data_end+0x1>
 3d6:	01 96       	adiw	r24, 0x01	; 1
 3d8:	90 93 bf 01 	sts	0x01BF, r25	; 0x8001bf <__data_end+0x1>
 3dc:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <__data_end>
	}
 3e0:	7b cf       	rjmp	.-266    	; 0x2d8 <main+0xb6>

000003e2 <__floatunsisf>:
 3e2:	e8 94       	clt
 3e4:	09 c0       	rjmp	.+18     	; 0x3f8 <__floatsisf+0x12>

000003e6 <__floatsisf>:
 3e6:	97 fb       	bst	r25, 7
 3e8:	3e f4       	brtc	.+14     	; 0x3f8 <__floatsisf+0x12>
 3ea:	90 95       	com	r25
 3ec:	80 95       	com	r24
 3ee:	70 95       	com	r23
 3f0:	61 95       	neg	r22
 3f2:	7f 4f       	sbci	r23, 0xFF	; 255
 3f4:	8f 4f       	sbci	r24, 0xFF	; 255
 3f6:	9f 4f       	sbci	r25, 0xFF	; 255
 3f8:	99 23       	and	r25, r25
 3fa:	a9 f0       	breq	.+42     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3fc:	f9 2f       	mov	r31, r25
 3fe:	96 e9       	ldi	r25, 0x96	; 150
 400:	bb 27       	eor	r27, r27
 402:	93 95       	inc	r25
 404:	f6 95       	lsr	r31
 406:	87 95       	ror	r24
 408:	77 95       	ror	r23
 40a:	67 95       	ror	r22
 40c:	b7 95       	ror	r27
 40e:	f1 11       	cpse	r31, r1
 410:	f8 cf       	rjmp	.-16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 412:	fa f4       	brpl	.+62     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 414:	bb 0f       	add	r27, r27
 416:	11 f4       	brne	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	60 ff       	sbrs	r22, 0
 41a:	1b c0       	rjmp	.+54     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 41c:	6f 5f       	subi	r22, 0xFF	; 255
 41e:	7f 4f       	sbci	r23, 0xFF	; 255
 420:	8f 4f       	sbci	r24, 0xFF	; 255
 422:	9f 4f       	sbci	r25, 0xFF	; 255
 424:	16 c0       	rjmp	.+44     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 426:	88 23       	and	r24, r24
 428:	11 f0       	breq	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	96 e9       	ldi	r25, 0x96	; 150
 42c:	11 c0       	rjmp	.+34     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 42e:	77 23       	and	r23, r23
 430:	21 f0       	breq	.+8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 432:	9e e8       	ldi	r25, 0x8E	; 142
 434:	87 2f       	mov	r24, r23
 436:	76 2f       	mov	r23, r22
 438:	05 c0       	rjmp	.+10     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43a:	66 23       	and	r22, r22
 43c:	71 f0       	breq	.+28     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 43e:	96 e8       	ldi	r25, 0x86	; 134
 440:	86 2f       	mov	r24, r22
 442:	70 e0       	ldi	r23, 0x00	; 0
 444:	60 e0       	ldi	r22, 0x00	; 0
 446:	2a f0       	brmi	.+10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 448:	9a 95       	dec	r25
 44a:	66 0f       	add	r22, r22
 44c:	77 1f       	adc	r23, r23
 44e:	88 1f       	adc	r24, r24
 450:	da f7       	brpl	.-10     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 452:	88 0f       	add	r24, r24
 454:	96 95       	lsr	r25
 456:	87 95       	ror	r24
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret

0000045c <__mulsf3>:
 45c:	0e 94 41 02 	call	0x482	; 0x482 <__mulsf3x>
 460:	0c 94 b2 02 	jmp	0x564	; 0x564 <__fp_round>
 464:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_pscA>
 468:	38 f0       	brcs	.+14     	; 0x478 <__mulsf3+0x1c>
 46a:	0e 94 ab 02 	call	0x556	; 0x556 <__fp_pscB>
 46e:	20 f0       	brcs	.+8      	; 0x478 <__mulsf3+0x1c>
 470:	95 23       	and	r25, r21
 472:	11 f0       	breq	.+4      	; 0x478 <__mulsf3+0x1c>
 474:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_inf>
 478:	0c 94 a1 02 	jmp	0x542	; 0x542 <__fp_nan>
 47c:	11 24       	eor	r1, r1
 47e:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__fp_szero>

00000482 <__mulsf3x>:
 482:	0e 94 c3 02 	call	0x586	; 0x586 <__fp_split3>
 486:	70 f3       	brcs	.-36     	; 0x464 <__mulsf3+0x8>

00000488 <__mulsf3_pse>:
 488:	95 9f       	mul	r25, r21
 48a:	c1 f3       	breq	.-16     	; 0x47c <__mulsf3+0x20>
 48c:	95 0f       	add	r25, r21
 48e:	50 e0       	ldi	r21, 0x00	; 0
 490:	55 1f       	adc	r21, r21
 492:	62 9f       	mul	r22, r18
 494:	f0 01       	movw	r30, r0
 496:	72 9f       	mul	r23, r18
 498:	bb 27       	eor	r27, r27
 49a:	f0 0d       	add	r31, r0
 49c:	b1 1d       	adc	r27, r1
 49e:	63 9f       	mul	r22, r19
 4a0:	aa 27       	eor	r26, r26
 4a2:	f0 0d       	add	r31, r0
 4a4:	b1 1d       	adc	r27, r1
 4a6:	aa 1f       	adc	r26, r26
 4a8:	64 9f       	mul	r22, r20
 4aa:	66 27       	eor	r22, r22
 4ac:	b0 0d       	add	r27, r0
 4ae:	a1 1d       	adc	r26, r1
 4b0:	66 1f       	adc	r22, r22
 4b2:	82 9f       	mul	r24, r18
 4b4:	22 27       	eor	r18, r18
 4b6:	b0 0d       	add	r27, r0
 4b8:	a1 1d       	adc	r26, r1
 4ba:	62 1f       	adc	r22, r18
 4bc:	73 9f       	mul	r23, r19
 4be:	b0 0d       	add	r27, r0
 4c0:	a1 1d       	adc	r26, r1
 4c2:	62 1f       	adc	r22, r18
 4c4:	83 9f       	mul	r24, r19
 4c6:	a0 0d       	add	r26, r0
 4c8:	61 1d       	adc	r22, r1
 4ca:	22 1f       	adc	r18, r18
 4cc:	74 9f       	mul	r23, r20
 4ce:	33 27       	eor	r19, r19
 4d0:	a0 0d       	add	r26, r0
 4d2:	61 1d       	adc	r22, r1
 4d4:	23 1f       	adc	r18, r19
 4d6:	84 9f       	mul	r24, r20
 4d8:	60 0d       	add	r22, r0
 4da:	21 1d       	adc	r18, r1
 4dc:	82 2f       	mov	r24, r18
 4de:	76 2f       	mov	r23, r22
 4e0:	6a 2f       	mov	r22, r26
 4e2:	11 24       	eor	r1, r1
 4e4:	9f 57       	subi	r25, 0x7F	; 127
 4e6:	50 40       	sbci	r21, 0x00	; 0
 4e8:	9a f0       	brmi	.+38     	; 0x510 <__mulsf3_pse+0x88>
 4ea:	f1 f0       	breq	.+60     	; 0x528 <__mulsf3_pse+0xa0>
 4ec:	88 23       	and	r24, r24
 4ee:	4a f0       	brmi	.+18     	; 0x502 <__mulsf3_pse+0x7a>
 4f0:	ee 0f       	add	r30, r30
 4f2:	ff 1f       	adc	r31, r31
 4f4:	bb 1f       	adc	r27, r27
 4f6:	66 1f       	adc	r22, r22
 4f8:	77 1f       	adc	r23, r23
 4fa:	88 1f       	adc	r24, r24
 4fc:	91 50       	subi	r25, 0x01	; 1
 4fe:	50 40       	sbci	r21, 0x00	; 0
 500:	a9 f7       	brne	.-22     	; 0x4ec <__mulsf3_pse+0x64>
 502:	9e 3f       	cpi	r25, 0xFE	; 254
 504:	51 05       	cpc	r21, r1
 506:	80 f0       	brcs	.+32     	; 0x528 <__mulsf3_pse+0xa0>
 508:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_inf>
 50c:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <__fp_szero>
 510:	5f 3f       	cpi	r21, 0xFF	; 255
 512:	e4 f3       	brlt	.-8      	; 0x50c <__mulsf3_pse+0x84>
 514:	98 3e       	cpi	r25, 0xE8	; 232
 516:	d4 f3       	brlt	.-12     	; 0x50c <__mulsf3_pse+0x84>
 518:	86 95       	lsr	r24
 51a:	77 95       	ror	r23
 51c:	67 95       	ror	r22
 51e:	b7 95       	ror	r27
 520:	f7 95       	ror	r31
 522:	e7 95       	ror	r30
 524:	9f 5f       	subi	r25, 0xFF	; 255
 526:	c1 f7       	brne	.-16     	; 0x518 <__mulsf3_pse+0x90>
 528:	fe 2b       	or	r31, r30
 52a:	88 0f       	add	r24, r24
 52c:	91 1d       	adc	r25, r1
 52e:	96 95       	lsr	r25
 530:	87 95       	ror	r24
 532:	97 f9       	bld	r25, 7
 534:	08 95       	ret

00000536 <__fp_inf>:
 536:	97 f9       	bld	r25, 7
 538:	9f 67       	ori	r25, 0x7F	; 127
 53a:	80 e8       	ldi	r24, 0x80	; 128
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	60 e0       	ldi	r22, 0x00	; 0
 540:	08 95       	ret

00000542 <__fp_nan>:
 542:	9f ef       	ldi	r25, 0xFF	; 255
 544:	80 ec       	ldi	r24, 0xC0	; 192
 546:	08 95       	ret

00000548 <__fp_pscA>:
 548:	00 24       	eor	r0, r0
 54a:	0a 94       	dec	r0
 54c:	16 16       	cp	r1, r22
 54e:	17 06       	cpc	r1, r23
 550:	18 06       	cpc	r1, r24
 552:	09 06       	cpc	r0, r25
 554:	08 95       	ret

00000556 <__fp_pscB>:
 556:	00 24       	eor	r0, r0
 558:	0a 94       	dec	r0
 55a:	12 16       	cp	r1, r18
 55c:	13 06       	cpc	r1, r19
 55e:	14 06       	cpc	r1, r20
 560:	05 06       	cpc	r0, r21
 562:	08 95       	ret

00000564 <__fp_round>:
 564:	09 2e       	mov	r0, r25
 566:	03 94       	inc	r0
 568:	00 0c       	add	r0, r0
 56a:	11 f4       	brne	.+4      	; 0x570 <__fp_round+0xc>
 56c:	88 23       	and	r24, r24
 56e:	52 f0       	brmi	.+20     	; 0x584 <__fp_round+0x20>
 570:	bb 0f       	add	r27, r27
 572:	40 f4       	brcc	.+16     	; 0x584 <__fp_round+0x20>
 574:	bf 2b       	or	r27, r31
 576:	11 f4       	brne	.+4      	; 0x57c <__fp_round+0x18>
 578:	60 ff       	sbrs	r22, 0
 57a:	04 c0       	rjmp	.+8      	; 0x584 <__fp_round+0x20>
 57c:	6f 5f       	subi	r22, 0xFF	; 255
 57e:	7f 4f       	sbci	r23, 0xFF	; 255
 580:	8f 4f       	sbci	r24, 0xFF	; 255
 582:	9f 4f       	sbci	r25, 0xFF	; 255
 584:	08 95       	ret

00000586 <__fp_split3>:
 586:	57 fd       	sbrc	r21, 7
 588:	90 58       	subi	r25, 0x80	; 128
 58a:	44 0f       	add	r20, r20
 58c:	55 1f       	adc	r21, r21
 58e:	59 f0       	breq	.+22     	; 0x5a6 <__fp_splitA+0x10>
 590:	5f 3f       	cpi	r21, 0xFF	; 255
 592:	71 f0       	breq	.+28     	; 0x5b0 <__fp_splitA+0x1a>
 594:	47 95       	ror	r20

00000596 <__fp_splitA>:
 596:	88 0f       	add	r24, r24
 598:	97 fb       	bst	r25, 7
 59a:	99 1f       	adc	r25, r25
 59c:	61 f0       	breq	.+24     	; 0x5b6 <__fp_splitA+0x20>
 59e:	9f 3f       	cpi	r25, 0xFF	; 255
 5a0:	79 f0       	breq	.+30     	; 0x5c0 <__fp_splitA+0x2a>
 5a2:	87 95       	ror	r24
 5a4:	08 95       	ret
 5a6:	12 16       	cp	r1, r18
 5a8:	13 06       	cpc	r1, r19
 5aa:	14 06       	cpc	r1, r20
 5ac:	55 1f       	adc	r21, r21
 5ae:	f2 cf       	rjmp	.-28     	; 0x594 <__fp_split3+0xe>
 5b0:	46 95       	lsr	r20
 5b2:	f1 df       	rcall	.-30     	; 0x596 <__fp_splitA>
 5b4:	08 c0       	rjmp	.+16     	; 0x5c6 <__fp_splitA+0x30>
 5b6:	16 16       	cp	r1, r22
 5b8:	17 06       	cpc	r1, r23
 5ba:	18 06       	cpc	r1, r24
 5bc:	99 1f       	adc	r25, r25
 5be:	f1 cf       	rjmp	.-30     	; 0x5a2 <__fp_splitA+0xc>
 5c0:	86 95       	lsr	r24
 5c2:	71 05       	cpc	r23, r1
 5c4:	61 05       	cpc	r22, r1
 5c6:	08 94       	sec
 5c8:	08 95       	ret

000005ca <__fp_zero>:
 5ca:	e8 94       	clt

000005cc <__fp_szero>:
 5cc:	bb 27       	eor	r27, r27
 5ce:	66 27       	eor	r22, r22
 5d0:	77 27       	eor	r23, r23
 5d2:	cb 01       	movw	r24, r22
 5d4:	97 f9       	bld	r25, 7
 5d6:	08 95       	ret

000005d8 <dtostrf>:
 5d8:	ef 92       	push	r14
 5da:	0f 93       	push	r16
 5dc:	1f 93       	push	r17
 5de:	cf 93       	push	r28
 5e0:	df 93       	push	r29
 5e2:	e8 01       	movw	r28, r16
 5e4:	47 fd       	sbrc	r20, 7
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <dtostrf+0x14>
 5e8:	34 e0       	ldi	r19, 0x04	; 4
 5ea:	01 c0       	rjmp	.+2      	; 0x5ee <dtostrf+0x16>
 5ec:	34 e1       	ldi	r19, 0x14	; 20
 5ee:	04 2e       	mov	r0, r20
 5f0:	00 0c       	add	r0, r0
 5f2:	55 0b       	sbc	r21, r21
 5f4:	57 ff       	sbrs	r21, 7
 5f6:	03 c0       	rjmp	.+6      	; 0x5fe <dtostrf+0x26>
 5f8:	51 95       	neg	r21
 5fa:	41 95       	neg	r20
 5fc:	51 09       	sbc	r21, r1
 5fe:	e3 2e       	mov	r14, r19
 600:	02 2f       	mov	r16, r18
 602:	24 2f       	mov	r18, r20
 604:	ae 01       	movw	r20, r28
 606:	0e 94 3c 03 	call	0x678	; 0x678 <dtoa_prf>
 60a:	ce 01       	movw	r24, r28
 60c:	df 91       	pop	r29
 60e:	cf 91       	pop	r28
 610:	1f 91       	pop	r17
 612:	0f 91       	pop	r16
 614:	ef 90       	pop	r14
 616:	08 95       	ret

00000618 <puts>:
 618:	0f 93       	push	r16
 61a:	1f 93       	push	r17
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <__iob+0x2>
 624:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <__iob+0x3>
 628:	23 81       	ldd	r18, Z+3	; 0x03
 62a:	21 ff       	sbrs	r18, 1
 62c:	1b c0       	rjmp	.+54     	; 0x664 <puts+0x4c>
 62e:	8c 01       	movw	r16, r24
 630:	d0 e0       	ldi	r29, 0x00	; 0
 632:	c0 e0       	ldi	r28, 0x00	; 0
 634:	f8 01       	movw	r30, r16
 636:	81 91       	ld	r24, Z+
 638:	8f 01       	movw	r16, r30
 63a:	60 91 c2 01 	lds	r22, 0x01C2	; 0x8001c2 <__iob+0x2>
 63e:	70 91 c3 01 	lds	r23, 0x01C3	; 0x8001c3 <__iob+0x3>
 642:	db 01       	movw	r26, r22
 644:	18 96       	adiw	r26, 0x08	; 8
 646:	ed 91       	ld	r30, X+
 648:	fc 91       	ld	r31, X
 64a:	19 97       	sbiw	r26, 0x09	; 9
 64c:	88 23       	and	r24, r24
 64e:	31 f0       	breq	.+12     	; 0x65c <puts+0x44>
 650:	09 95       	icall
 652:	89 2b       	or	r24, r25
 654:	79 f3       	breq	.-34     	; 0x634 <puts+0x1c>
 656:	df ef       	ldi	r29, 0xFF	; 255
 658:	cf ef       	ldi	r28, 0xFF	; 255
 65a:	ec cf       	rjmp	.-40     	; 0x634 <puts+0x1c>
 65c:	8a e0       	ldi	r24, 0x0A	; 10
 65e:	09 95       	icall
 660:	89 2b       	or	r24, r25
 662:	19 f0       	breq	.+6      	; 0x66a <puts+0x52>
 664:	8f ef       	ldi	r24, 0xFF	; 255
 666:	9f ef       	ldi	r25, 0xFF	; 255
 668:	02 c0       	rjmp	.+4      	; 0x66e <puts+0x56>
 66a:	8d 2f       	mov	r24, r29
 66c:	9c 2f       	mov	r25, r28
 66e:	df 91       	pop	r29
 670:	cf 91       	pop	r28
 672:	1f 91       	pop	r17
 674:	0f 91       	pop	r16
 676:	08 95       	ret

00000678 <dtoa_prf>:
 678:	a9 e0       	ldi	r26, 0x09	; 9
 67a:	b0 e0       	ldi	r27, 0x00	; 0
 67c:	e2 e4       	ldi	r30, 0x42	; 66
 67e:	f3 e0       	ldi	r31, 0x03	; 3
 680:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__prologue_saves__+0xc>
 684:	6a 01       	movw	r12, r20
 686:	12 2f       	mov	r17, r18
 688:	b0 2e       	mov	r11, r16
 68a:	2b e3       	ldi	r18, 0x3B	; 59
 68c:	20 17       	cp	r18, r16
 68e:	20 f0       	brcs	.+8      	; 0x698 <dtoa_prf+0x20>
 690:	ff 24       	eor	r15, r15
 692:	f3 94       	inc	r15
 694:	f0 0e       	add	r15, r16
 696:	02 c0       	rjmp	.+4      	; 0x69c <dtoa_prf+0x24>
 698:	2c e3       	ldi	r18, 0x3C	; 60
 69a:	f2 2e       	mov	r15, r18
 69c:	0f 2d       	mov	r16, r15
 69e:	27 e0       	ldi	r18, 0x07	; 7
 6a0:	ae 01       	movw	r20, r28
 6a2:	4f 5f       	subi	r20, 0xFF	; 255
 6a4:	5f 4f       	sbci	r21, 0xFF	; 255
 6a6:	0e 94 96 04 	call	0x92c	; 0x92c <__ftoa_engine>
 6aa:	bc 01       	movw	r22, r24
 6ac:	49 81       	ldd	r20, Y+1	; 0x01
 6ae:	84 2f       	mov	r24, r20
 6b0:	89 70       	andi	r24, 0x09	; 9
 6b2:	81 30       	cpi	r24, 0x01	; 1
 6b4:	31 f0       	breq	.+12     	; 0x6c2 <dtoa_prf+0x4a>
 6b6:	e1 fc       	sbrc	r14, 1
 6b8:	06 c0       	rjmp	.+12     	; 0x6c6 <dtoa_prf+0x4e>
 6ba:	e0 fe       	sbrs	r14, 0
 6bc:	06 c0       	rjmp	.+12     	; 0x6ca <dtoa_prf+0x52>
 6be:	90 e2       	ldi	r25, 0x20	; 32
 6c0:	05 c0       	rjmp	.+10     	; 0x6cc <dtoa_prf+0x54>
 6c2:	9d e2       	ldi	r25, 0x2D	; 45
 6c4:	03 c0       	rjmp	.+6      	; 0x6cc <dtoa_prf+0x54>
 6c6:	9b e2       	ldi	r25, 0x2B	; 43
 6c8:	01 c0       	rjmp	.+2      	; 0x6cc <dtoa_prf+0x54>
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	5e 2d       	mov	r21, r14
 6ce:	50 71       	andi	r21, 0x10	; 16
 6d0:	43 ff       	sbrs	r20, 3
 6d2:	3c c0       	rjmp	.+120    	; 0x74c <dtoa_prf+0xd4>
 6d4:	91 11       	cpse	r25, r1
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <dtoa_prf+0x64>
 6d8:	83 e0       	ldi	r24, 0x03	; 3
 6da:	01 c0       	rjmp	.+2      	; 0x6de <dtoa_prf+0x66>
 6dc:	84 e0       	ldi	r24, 0x04	; 4
 6de:	81 17       	cp	r24, r17
 6e0:	18 f4       	brcc	.+6      	; 0x6e8 <dtoa_prf+0x70>
 6e2:	21 2f       	mov	r18, r17
 6e4:	28 1b       	sub	r18, r24
 6e6:	01 c0       	rjmp	.+2      	; 0x6ea <dtoa_prf+0x72>
 6e8:	20 e0       	ldi	r18, 0x00	; 0
 6ea:	51 11       	cpse	r21, r1
 6ec:	0b c0       	rjmp	.+22     	; 0x704 <dtoa_prf+0x8c>
 6ee:	f6 01       	movw	r30, r12
 6f0:	82 2f       	mov	r24, r18
 6f2:	30 e2       	ldi	r19, 0x20	; 32
 6f4:	88 23       	and	r24, r24
 6f6:	19 f0       	breq	.+6      	; 0x6fe <dtoa_prf+0x86>
 6f8:	31 93       	st	Z+, r19
 6fa:	81 50       	subi	r24, 0x01	; 1
 6fc:	fb cf       	rjmp	.-10     	; 0x6f4 <dtoa_prf+0x7c>
 6fe:	c2 0e       	add	r12, r18
 700:	d1 1c       	adc	r13, r1
 702:	20 e0       	ldi	r18, 0x00	; 0
 704:	99 23       	and	r25, r25
 706:	29 f0       	breq	.+10     	; 0x712 <dtoa_prf+0x9a>
 708:	d6 01       	movw	r26, r12
 70a:	9c 93       	st	X, r25
 70c:	f6 01       	movw	r30, r12
 70e:	31 96       	adiw	r30, 0x01	; 1
 710:	6f 01       	movw	r12, r30
 712:	c6 01       	movw	r24, r12
 714:	03 96       	adiw	r24, 0x03	; 3
 716:	e2 fe       	sbrs	r14, 2
 718:	0a c0       	rjmp	.+20     	; 0x72e <dtoa_prf+0xb6>
 71a:	3e e4       	ldi	r19, 0x4E	; 78
 71c:	d6 01       	movw	r26, r12
 71e:	3c 93       	st	X, r19
 720:	41 e4       	ldi	r20, 0x41	; 65
 722:	11 96       	adiw	r26, 0x01	; 1
 724:	4c 93       	st	X, r20
 726:	11 97       	sbiw	r26, 0x01	; 1
 728:	12 96       	adiw	r26, 0x02	; 2
 72a:	3c 93       	st	X, r19
 72c:	06 c0       	rjmp	.+12     	; 0x73a <dtoa_prf+0xc2>
 72e:	3e e6       	ldi	r19, 0x6E	; 110
 730:	f6 01       	movw	r30, r12
 732:	30 83       	st	Z, r19
 734:	41 e6       	ldi	r20, 0x61	; 97
 736:	41 83       	std	Z+1, r20	; 0x01
 738:	32 83       	std	Z+2, r19	; 0x02
 73a:	fc 01       	movw	r30, r24
 73c:	32 2f       	mov	r19, r18
 73e:	40 e2       	ldi	r20, 0x20	; 32
 740:	33 23       	and	r19, r19
 742:	09 f4       	brne	.+2      	; 0x746 <dtoa_prf+0xce>
 744:	42 c0       	rjmp	.+132    	; 0x7ca <dtoa_prf+0x152>
 746:	41 93       	st	Z+, r20
 748:	31 50       	subi	r19, 0x01	; 1
 74a:	fa cf       	rjmp	.-12     	; 0x740 <dtoa_prf+0xc8>
 74c:	42 ff       	sbrs	r20, 2
 74e:	44 c0       	rjmp	.+136    	; 0x7d8 <dtoa_prf+0x160>
 750:	91 11       	cpse	r25, r1
 752:	02 c0       	rjmp	.+4      	; 0x758 <dtoa_prf+0xe0>
 754:	83 e0       	ldi	r24, 0x03	; 3
 756:	01 c0       	rjmp	.+2      	; 0x75a <dtoa_prf+0xe2>
 758:	84 e0       	ldi	r24, 0x04	; 4
 75a:	81 17       	cp	r24, r17
 75c:	18 f4       	brcc	.+6      	; 0x764 <dtoa_prf+0xec>
 75e:	21 2f       	mov	r18, r17
 760:	28 1b       	sub	r18, r24
 762:	01 c0       	rjmp	.+2      	; 0x766 <dtoa_prf+0xee>
 764:	20 e0       	ldi	r18, 0x00	; 0
 766:	51 11       	cpse	r21, r1
 768:	0b c0       	rjmp	.+22     	; 0x780 <dtoa_prf+0x108>
 76a:	f6 01       	movw	r30, r12
 76c:	82 2f       	mov	r24, r18
 76e:	30 e2       	ldi	r19, 0x20	; 32
 770:	88 23       	and	r24, r24
 772:	19 f0       	breq	.+6      	; 0x77a <dtoa_prf+0x102>
 774:	31 93       	st	Z+, r19
 776:	81 50       	subi	r24, 0x01	; 1
 778:	fb cf       	rjmp	.-10     	; 0x770 <dtoa_prf+0xf8>
 77a:	c2 0e       	add	r12, r18
 77c:	d1 1c       	adc	r13, r1
 77e:	20 e0       	ldi	r18, 0x00	; 0
 780:	99 23       	and	r25, r25
 782:	29 f0       	breq	.+10     	; 0x78e <dtoa_prf+0x116>
 784:	d6 01       	movw	r26, r12
 786:	9c 93       	st	X, r25
 788:	f6 01       	movw	r30, r12
 78a:	31 96       	adiw	r30, 0x01	; 1
 78c:	6f 01       	movw	r12, r30
 78e:	c6 01       	movw	r24, r12
 790:	03 96       	adiw	r24, 0x03	; 3
 792:	e2 fe       	sbrs	r14, 2
 794:	0b c0       	rjmp	.+22     	; 0x7ac <dtoa_prf+0x134>
 796:	39 e4       	ldi	r19, 0x49	; 73
 798:	d6 01       	movw	r26, r12
 79a:	3c 93       	st	X, r19
 79c:	3e e4       	ldi	r19, 0x4E	; 78
 79e:	11 96       	adiw	r26, 0x01	; 1
 7a0:	3c 93       	st	X, r19
 7a2:	11 97       	sbiw	r26, 0x01	; 1
 7a4:	36 e4       	ldi	r19, 0x46	; 70
 7a6:	12 96       	adiw	r26, 0x02	; 2
 7a8:	3c 93       	st	X, r19
 7aa:	07 c0       	rjmp	.+14     	; 0x7ba <dtoa_prf+0x142>
 7ac:	39 e6       	ldi	r19, 0x69	; 105
 7ae:	f6 01       	movw	r30, r12
 7b0:	30 83       	st	Z, r19
 7b2:	3e e6       	ldi	r19, 0x6E	; 110
 7b4:	31 83       	std	Z+1, r19	; 0x01
 7b6:	36 e6       	ldi	r19, 0x66	; 102
 7b8:	32 83       	std	Z+2, r19	; 0x02
 7ba:	fc 01       	movw	r30, r24
 7bc:	32 2f       	mov	r19, r18
 7be:	40 e2       	ldi	r20, 0x20	; 32
 7c0:	33 23       	and	r19, r19
 7c2:	19 f0       	breq	.+6      	; 0x7ca <dtoa_prf+0x152>
 7c4:	41 93       	st	Z+, r20
 7c6:	31 50       	subi	r19, 0x01	; 1
 7c8:	fb cf       	rjmp	.-10     	; 0x7c0 <dtoa_prf+0x148>
 7ca:	fc 01       	movw	r30, r24
 7cc:	e2 0f       	add	r30, r18
 7ce:	f1 1d       	adc	r31, r1
 7d0:	10 82       	st	Z, r1
 7d2:	8e ef       	ldi	r24, 0xFE	; 254
 7d4:	9f ef       	ldi	r25, 0xFF	; 255
 7d6:	a6 c0       	rjmp	.+332    	; 0x924 <__stack+0x25>
 7d8:	21 e0       	ldi	r18, 0x01	; 1
 7da:	30 e0       	ldi	r19, 0x00	; 0
 7dc:	91 11       	cpse	r25, r1
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <dtoa_prf+0x16c>
 7e0:	20 e0       	ldi	r18, 0x00	; 0
 7e2:	30 e0       	ldi	r19, 0x00	; 0
 7e4:	16 16       	cp	r1, r22
 7e6:	17 06       	cpc	r1, r23
 7e8:	1c f4       	brge	.+6      	; 0x7f0 <dtoa_prf+0x178>
 7ea:	fb 01       	movw	r30, r22
 7ec:	31 96       	adiw	r30, 0x01	; 1
 7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <dtoa_prf+0x17c>
 7f0:	e1 e0       	ldi	r30, 0x01	; 1
 7f2:	f0 e0       	ldi	r31, 0x00	; 0
 7f4:	2e 0f       	add	r18, r30
 7f6:	3f 1f       	adc	r19, r31
 7f8:	bb 20       	and	r11, r11
 7fa:	21 f0       	breq	.+8      	; 0x804 <dtoa_prf+0x18c>
 7fc:	eb 2d       	mov	r30, r11
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	31 96       	adiw	r30, 0x01	; 1
 802:	02 c0       	rjmp	.+4      	; 0x808 <dtoa_prf+0x190>
 804:	e0 e0       	ldi	r30, 0x00	; 0
 806:	f0 e0       	ldi	r31, 0x00	; 0
 808:	2e 0f       	add	r18, r30
 80a:	3f 1f       	adc	r19, r31
 80c:	e1 2f       	mov	r30, r17
 80e:	f0 e0       	ldi	r31, 0x00	; 0
 810:	2e 17       	cp	r18, r30
 812:	3f 07       	cpc	r19, r31
 814:	1c f4       	brge	.+6      	; 0x81c <dtoa_prf+0x1a4>
 816:	12 1b       	sub	r17, r18
 818:	21 2f       	mov	r18, r17
 81a:	01 c0       	rjmp	.+2      	; 0x81e <dtoa_prf+0x1a6>
 81c:	20 e0       	ldi	r18, 0x00	; 0
 81e:	8e 2d       	mov	r24, r14
 820:	88 71       	andi	r24, 0x18	; 24
 822:	59 f4       	brne	.+22     	; 0x83a <dtoa_prf+0x1c2>
 824:	f6 01       	movw	r30, r12
 826:	82 2f       	mov	r24, r18
 828:	30 e2       	ldi	r19, 0x20	; 32
 82a:	88 23       	and	r24, r24
 82c:	19 f0       	breq	.+6      	; 0x834 <dtoa_prf+0x1bc>
 82e:	31 93       	st	Z+, r19
 830:	81 50       	subi	r24, 0x01	; 1
 832:	fb cf       	rjmp	.-10     	; 0x82a <dtoa_prf+0x1b2>
 834:	c2 0e       	add	r12, r18
 836:	d1 1c       	adc	r13, r1
 838:	20 e0       	ldi	r18, 0x00	; 0
 83a:	99 23       	and	r25, r25
 83c:	29 f0       	breq	.+10     	; 0x848 <dtoa_prf+0x1d0>
 83e:	d6 01       	movw	r26, r12
 840:	9c 93       	st	X, r25
 842:	f6 01       	movw	r30, r12
 844:	31 96       	adiw	r30, 0x01	; 1
 846:	6f 01       	movw	r12, r30
 848:	51 11       	cpse	r21, r1
 84a:	0b c0       	rjmp	.+22     	; 0x862 <dtoa_prf+0x1ea>
 84c:	f6 01       	movw	r30, r12
 84e:	82 2f       	mov	r24, r18
 850:	90 e3       	ldi	r25, 0x30	; 48
 852:	88 23       	and	r24, r24
 854:	19 f0       	breq	.+6      	; 0x85c <dtoa_prf+0x1e4>
 856:	91 93       	st	Z+, r25
 858:	81 50       	subi	r24, 0x01	; 1
 85a:	fb cf       	rjmp	.-10     	; 0x852 <dtoa_prf+0x1da>
 85c:	c2 0e       	add	r12, r18
 85e:	d1 1c       	adc	r13, r1
 860:	20 e0       	ldi	r18, 0x00	; 0
 862:	0f 2d       	mov	r16, r15
 864:	06 0f       	add	r16, r22
 866:	9a 81       	ldd	r25, Y+2	; 0x02
 868:	34 2f       	mov	r19, r20
 86a:	30 71       	andi	r19, 0x10	; 16
 86c:	44 ff       	sbrs	r20, 4
 86e:	03 c0       	rjmp	.+6      	; 0x876 <dtoa_prf+0x1fe>
 870:	91 33       	cpi	r25, 0x31	; 49
 872:	09 f4       	brne	.+2      	; 0x876 <dtoa_prf+0x1fe>
 874:	01 50       	subi	r16, 0x01	; 1
 876:	10 16       	cp	r1, r16
 878:	24 f4       	brge	.+8      	; 0x882 <dtoa_prf+0x20a>
 87a:	09 30       	cpi	r16, 0x09	; 9
 87c:	18 f0       	brcs	.+6      	; 0x884 <dtoa_prf+0x20c>
 87e:	08 e0       	ldi	r16, 0x08	; 8
 880:	01 c0       	rjmp	.+2      	; 0x884 <dtoa_prf+0x20c>
 882:	01 e0       	ldi	r16, 0x01	; 1
 884:	ab 01       	movw	r20, r22
 886:	77 ff       	sbrs	r23, 7
 888:	02 c0       	rjmp	.+4      	; 0x88e <dtoa_prf+0x216>
 88a:	40 e0       	ldi	r20, 0x00	; 0
 88c:	50 e0       	ldi	r21, 0x00	; 0
 88e:	fb 01       	movw	r30, r22
 890:	e4 1b       	sub	r30, r20
 892:	f5 0b       	sbc	r31, r21
 894:	a1 e0       	ldi	r26, 0x01	; 1
 896:	b0 e0       	ldi	r27, 0x00	; 0
 898:	ac 0f       	add	r26, r28
 89a:	bd 1f       	adc	r27, r29
 89c:	ea 0f       	add	r30, r26
 89e:	fb 1f       	adc	r31, r27
 8a0:	8e e2       	ldi	r24, 0x2E	; 46
 8a2:	a8 2e       	mov	r10, r24
 8a4:	4b 01       	movw	r8, r22
 8a6:	80 1a       	sub	r8, r16
 8a8:	91 08       	sbc	r9, r1
 8aa:	0b 2d       	mov	r16, r11
 8ac:	10 e0       	ldi	r17, 0x00	; 0
 8ae:	11 95       	neg	r17
 8b0:	01 95       	neg	r16
 8b2:	11 09       	sbc	r17, r1
 8b4:	4f 3f       	cpi	r20, 0xFF	; 255
 8b6:	bf ef       	ldi	r27, 0xFF	; 255
 8b8:	5b 07       	cpc	r21, r27
 8ba:	21 f4       	brne	.+8      	; 0x8c4 <dtoa_prf+0x24c>
 8bc:	d6 01       	movw	r26, r12
 8be:	ac 92       	st	X, r10
 8c0:	11 96       	adiw	r26, 0x01	; 1
 8c2:	6d 01       	movw	r12, r26
 8c4:	64 17       	cp	r22, r20
 8c6:	75 07       	cpc	r23, r21
 8c8:	2c f0       	brlt	.+10     	; 0x8d4 <dtoa_prf+0x25c>
 8ca:	84 16       	cp	r8, r20
 8cc:	95 06       	cpc	r9, r21
 8ce:	14 f4       	brge	.+4      	; 0x8d4 <dtoa_prf+0x25c>
 8d0:	81 81       	ldd	r24, Z+1	; 0x01
 8d2:	01 c0       	rjmp	.+2      	; 0x8d6 <dtoa_prf+0x25e>
 8d4:	80 e3       	ldi	r24, 0x30	; 48
 8d6:	41 50       	subi	r20, 0x01	; 1
 8d8:	51 09       	sbc	r21, r1
 8da:	31 96       	adiw	r30, 0x01	; 1
 8dc:	d6 01       	movw	r26, r12
 8de:	11 96       	adiw	r26, 0x01	; 1
 8e0:	7d 01       	movw	r14, r26
 8e2:	40 17       	cp	r20, r16
 8e4:	51 07       	cpc	r21, r17
 8e6:	24 f0       	brlt	.+8      	; 0x8f0 <dtoa_prf+0x278>
 8e8:	d6 01       	movw	r26, r12
 8ea:	8c 93       	st	X, r24
 8ec:	67 01       	movw	r12, r14
 8ee:	e2 cf       	rjmp	.-60     	; 0x8b4 <dtoa_prf+0x23c>
 8f0:	64 17       	cp	r22, r20
 8f2:	75 07       	cpc	r23, r21
 8f4:	39 f4       	brne	.+14     	; 0x904 <__stack+0x5>
 8f6:	96 33       	cpi	r25, 0x36	; 54
 8f8:	20 f4       	brcc	.+8      	; 0x902 <__stack+0x3>
 8fa:	95 33       	cpi	r25, 0x35	; 53
 8fc:	19 f4       	brne	.+6      	; 0x904 <__stack+0x5>
 8fe:	31 11       	cpse	r19, r1
 900:	01 c0       	rjmp	.+2      	; 0x904 <__stack+0x5>
 902:	81 e3       	ldi	r24, 0x31	; 49
 904:	f6 01       	movw	r30, r12
 906:	80 83       	st	Z, r24
 908:	f7 01       	movw	r30, r14
 90a:	82 2f       	mov	r24, r18
 90c:	90 e2       	ldi	r25, 0x20	; 32
 90e:	88 23       	and	r24, r24
 910:	19 f0       	breq	.+6      	; 0x918 <__stack+0x19>
 912:	91 93       	st	Z+, r25
 914:	81 50       	subi	r24, 0x01	; 1
 916:	fb cf       	rjmp	.-10     	; 0x90e <__stack+0xf>
 918:	f7 01       	movw	r30, r14
 91a:	e2 0f       	add	r30, r18
 91c:	f1 1d       	adc	r31, r1
 91e:	10 82       	st	Z, r1
 920:	80 e0       	ldi	r24, 0x00	; 0
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	29 96       	adiw	r28, 0x09	; 9
 926:	ec e0       	ldi	r30, 0x0C	; 12
 928:	0c 94 90 05 	jmp	0xb20	; 0xb20 <__epilogue_restores__+0xc>

0000092c <__ftoa_engine>:
 92c:	28 30       	cpi	r18, 0x08	; 8
 92e:	08 f0       	brcs	.+2      	; 0x932 <__ftoa_engine+0x6>
 930:	27 e0       	ldi	r18, 0x07	; 7
 932:	33 27       	eor	r19, r19
 934:	da 01       	movw	r26, r20
 936:	99 0f       	add	r25, r25
 938:	31 1d       	adc	r19, r1
 93a:	87 fd       	sbrc	r24, 7
 93c:	91 60       	ori	r25, 0x01	; 1
 93e:	00 96       	adiw	r24, 0x00	; 0
 940:	61 05       	cpc	r22, r1
 942:	71 05       	cpc	r23, r1
 944:	39 f4       	brne	.+14     	; 0x954 <__ftoa_engine+0x28>
 946:	32 60       	ori	r19, 0x02	; 2
 948:	2e 5f       	subi	r18, 0xFE	; 254
 94a:	3d 93       	st	X+, r19
 94c:	30 e3       	ldi	r19, 0x30	; 48
 94e:	2a 95       	dec	r18
 950:	e1 f7       	brne	.-8      	; 0x94a <__ftoa_engine+0x1e>
 952:	08 95       	ret
 954:	9f 3f       	cpi	r25, 0xFF	; 255
 956:	30 f0       	brcs	.+12     	; 0x964 <__ftoa_engine+0x38>
 958:	80 38       	cpi	r24, 0x80	; 128
 95a:	71 05       	cpc	r23, r1
 95c:	61 05       	cpc	r22, r1
 95e:	09 f0       	breq	.+2      	; 0x962 <__ftoa_engine+0x36>
 960:	3c 5f       	subi	r19, 0xFC	; 252
 962:	3c 5f       	subi	r19, 0xFC	; 252
 964:	3d 93       	st	X+, r19
 966:	91 30       	cpi	r25, 0x01	; 1
 968:	08 f0       	brcs	.+2      	; 0x96c <__ftoa_engine+0x40>
 96a:	80 68       	ori	r24, 0x80	; 128
 96c:	91 1d       	adc	r25, r1
 96e:	df 93       	push	r29
 970:	cf 93       	push	r28
 972:	1f 93       	push	r17
 974:	0f 93       	push	r16
 976:	ff 92       	push	r15
 978:	ef 92       	push	r14
 97a:	19 2f       	mov	r17, r25
 97c:	98 7f       	andi	r25, 0xF8	; 248
 97e:	96 95       	lsr	r25
 980:	e9 2f       	mov	r30, r25
 982:	96 95       	lsr	r25
 984:	96 95       	lsr	r25
 986:	e9 0f       	add	r30, r25
 988:	ff 27       	eor	r31, r31
 98a:	ee 53       	subi	r30, 0x3E	; 62
 98c:	ff 4f       	sbci	r31, 0xFF	; 255
 98e:	99 27       	eor	r25, r25
 990:	33 27       	eor	r19, r19
 992:	ee 24       	eor	r14, r14
 994:	ff 24       	eor	r15, r15
 996:	a7 01       	movw	r20, r14
 998:	e7 01       	movw	r28, r14
 99a:	05 90       	lpm	r0, Z+
 99c:	08 94       	sec
 99e:	07 94       	ror	r0
 9a0:	28 f4       	brcc	.+10     	; 0x9ac <__ftoa_engine+0x80>
 9a2:	36 0f       	add	r19, r22
 9a4:	e7 1e       	adc	r14, r23
 9a6:	f8 1e       	adc	r15, r24
 9a8:	49 1f       	adc	r20, r25
 9aa:	51 1d       	adc	r21, r1
 9ac:	66 0f       	add	r22, r22
 9ae:	77 1f       	adc	r23, r23
 9b0:	88 1f       	adc	r24, r24
 9b2:	99 1f       	adc	r25, r25
 9b4:	06 94       	lsr	r0
 9b6:	a1 f7       	brne	.-24     	; 0x9a0 <__ftoa_engine+0x74>
 9b8:	05 90       	lpm	r0, Z+
 9ba:	07 94       	ror	r0
 9bc:	28 f4       	brcc	.+10     	; 0x9c8 <__ftoa_engine+0x9c>
 9be:	e7 0e       	add	r14, r23
 9c0:	f8 1e       	adc	r15, r24
 9c2:	49 1f       	adc	r20, r25
 9c4:	56 1f       	adc	r21, r22
 9c6:	c1 1d       	adc	r28, r1
 9c8:	77 0f       	add	r23, r23
 9ca:	88 1f       	adc	r24, r24
 9cc:	99 1f       	adc	r25, r25
 9ce:	66 1f       	adc	r22, r22
 9d0:	06 94       	lsr	r0
 9d2:	a1 f7       	brne	.-24     	; 0x9bc <__ftoa_engine+0x90>
 9d4:	05 90       	lpm	r0, Z+
 9d6:	07 94       	ror	r0
 9d8:	28 f4       	brcc	.+10     	; 0x9e4 <__ftoa_engine+0xb8>
 9da:	f8 0e       	add	r15, r24
 9dc:	49 1f       	adc	r20, r25
 9de:	56 1f       	adc	r21, r22
 9e0:	c7 1f       	adc	r28, r23
 9e2:	d1 1d       	adc	r29, r1
 9e4:	88 0f       	add	r24, r24
 9e6:	99 1f       	adc	r25, r25
 9e8:	66 1f       	adc	r22, r22
 9ea:	77 1f       	adc	r23, r23
 9ec:	06 94       	lsr	r0
 9ee:	a1 f7       	brne	.-24     	; 0x9d8 <__ftoa_engine+0xac>
 9f0:	05 90       	lpm	r0, Z+
 9f2:	07 94       	ror	r0
 9f4:	20 f4       	brcc	.+8      	; 0x9fe <__ftoa_engine+0xd2>
 9f6:	49 0f       	add	r20, r25
 9f8:	56 1f       	adc	r21, r22
 9fa:	c7 1f       	adc	r28, r23
 9fc:	d8 1f       	adc	r29, r24
 9fe:	99 0f       	add	r25, r25
 a00:	66 1f       	adc	r22, r22
 a02:	77 1f       	adc	r23, r23
 a04:	88 1f       	adc	r24, r24
 a06:	06 94       	lsr	r0
 a08:	a9 f7       	brne	.-22     	; 0x9f4 <__ftoa_engine+0xc8>
 a0a:	84 91       	lpm	r24, Z
 a0c:	10 95       	com	r17
 a0e:	17 70       	andi	r17, 0x07	; 7
 a10:	41 f0       	breq	.+16     	; 0xa22 <__ftoa_engine+0xf6>
 a12:	d6 95       	lsr	r29
 a14:	c7 95       	ror	r28
 a16:	57 95       	ror	r21
 a18:	47 95       	ror	r20
 a1a:	f7 94       	ror	r15
 a1c:	e7 94       	ror	r14
 a1e:	1a 95       	dec	r17
 a20:	c1 f7       	brne	.-16     	; 0xa12 <__ftoa_engine+0xe6>
 a22:	e8 e6       	ldi	r30, 0x68	; 104
 a24:	f0 e0       	ldi	r31, 0x00	; 0
 a26:	68 94       	set
 a28:	15 90       	lpm	r1, Z+
 a2a:	15 91       	lpm	r17, Z+
 a2c:	35 91       	lpm	r19, Z+
 a2e:	65 91       	lpm	r22, Z+
 a30:	95 91       	lpm	r25, Z+
 a32:	05 90       	lpm	r0, Z+
 a34:	7f e2       	ldi	r23, 0x2F	; 47
 a36:	73 95       	inc	r23
 a38:	e1 18       	sub	r14, r1
 a3a:	f1 0a       	sbc	r15, r17
 a3c:	43 0b       	sbc	r20, r19
 a3e:	56 0b       	sbc	r21, r22
 a40:	c9 0b       	sbc	r28, r25
 a42:	d0 09       	sbc	r29, r0
 a44:	c0 f7       	brcc	.-16     	; 0xa36 <__ftoa_engine+0x10a>
 a46:	e1 0c       	add	r14, r1
 a48:	f1 1e       	adc	r15, r17
 a4a:	43 1f       	adc	r20, r19
 a4c:	56 1f       	adc	r21, r22
 a4e:	c9 1f       	adc	r28, r25
 a50:	d0 1d       	adc	r29, r0
 a52:	7e f4       	brtc	.+30     	; 0xa72 <__ftoa_engine+0x146>
 a54:	70 33       	cpi	r23, 0x30	; 48
 a56:	11 f4       	brne	.+4      	; 0xa5c <__ftoa_engine+0x130>
 a58:	8a 95       	dec	r24
 a5a:	e6 cf       	rjmp	.-52     	; 0xa28 <__ftoa_engine+0xfc>
 a5c:	e8 94       	clt
 a5e:	01 50       	subi	r16, 0x01	; 1
 a60:	30 f0       	brcs	.+12     	; 0xa6e <__ftoa_engine+0x142>
 a62:	08 0f       	add	r16, r24
 a64:	0a f4       	brpl	.+2      	; 0xa68 <__ftoa_engine+0x13c>
 a66:	00 27       	eor	r16, r16
 a68:	02 17       	cp	r16, r18
 a6a:	08 f4       	brcc	.+2      	; 0xa6e <__ftoa_engine+0x142>
 a6c:	20 2f       	mov	r18, r16
 a6e:	23 95       	inc	r18
 a70:	02 2f       	mov	r16, r18
 a72:	7a 33       	cpi	r23, 0x3A	; 58
 a74:	28 f0       	brcs	.+10     	; 0xa80 <__ftoa_engine+0x154>
 a76:	79 e3       	ldi	r23, 0x39	; 57
 a78:	7d 93       	st	X+, r23
 a7a:	2a 95       	dec	r18
 a7c:	e9 f7       	brne	.-6      	; 0xa78 <__ftoa_engine+0x14c>
 a7e:	10 c0       	rjmp	.+32     	; 0xaa0 <__ftoa_engine+0x174>
 a80:	7d 93       	st	X+, r23
 a82:	2a 95       	dec	r18
 a84:	89 f6       	brne	.-94     	; 0xa28 <__ftoa_engine+0xfc>
 a86:	06 94       	lsr	r0
 a88:	97 95       	ror	r25
 a8a:	67 95       	ror	r22
 a8c:	37 95       	ror	r19
 a8e:	17 95       	ror	r17
 a90:	17 94       	ror	r1
 a92:	e1 18       	sub	r14, r1
 a94:	f1 0a       	sbc	r15, r17
 a96:	43 0b       	sbc	r20, r19
 a98:	56 0b       	sbc	r21, r22
 a9a:	c9 0b       	sbc	r28, r25
 a9c:	d0 09       	sbc	r29, r0
 a9e:	98 f0       	brcs	.+38     	; 0xac6 <__ftoa_engine+0x19a>
 aa0:	23 95       	inc	r18
 aa2:	7e 91       	ld	r23, -X
 aa4:	73 95       	inc	r23
 aa6:	7a 33       	cpi	r23, 0x3A	; 58
 aa8:	08 f0       	brcs	.+2      	; 0xaac <__ftoa_engine+0x180>
 aaa:	70 e3       	ldi	r23, 0x30	; 48
 aac:	7c 93       	st	X, r23
 aae:	20 13       	cpse	r18, r16
 ab0:	b8 f7       	brcc	.-18     	; 0xaa0 <__ftoa_engine+0x174>
 ab2:	7e 91       	ld	r23, -X
 ab4:	70 61       	ori	r23, 0x10	; 16
 ab6:	7d 93       	st	X+, r23
 ab8:	30 f0       	brcs	.+12     	; 0xac6 <__ftoa_engine+0x19a>
 aba:	83 95       	inc	r24
 abc:	71 e3       	ldi	r23, 0x31	; 49
 abe:	7d 93       	st	X+, r23
 ac0:	70 e3       	ldi	r23, 0x30	; 48
 ac2:	2a 95       	dec	r18
 ac4:	e1 f7       	brne	.-8      	; 0xabe <__ftoa_engine+0x192>
 ac6:	11 24       	eor	r1, r1
 ac8:	ef 90       	pop	r14
 aca:	ff 90       	pop	r15
 acc:	0f 91       	pop	r16
 ace:	1f 91       	pop	r17
 ad0:	cf 91       	pop	r28
 ad2:	df 91       	pop	r29
 ad4:	99 27       	eor	r25, r25
 ad6:	87 fd       	sbrc	r24, 7
 ad8:	90 95       	com	r25
 ada:	08 95       	ret

00000adc <__prologue_saves__>:
 adc:	2f 92       	push	r2
 ade:	3f 92       	push	r3
 ae0:	4f 92       	push	r4
 ae2:	5f 92       	push	r5
 ae4:	6f 92       	push	r6
 ae6:	7f 92       	push	r7
 ae8:	8f 92       	push	r8
 aea:	9f 92       	push	r9
 aec:	af 92       	push	r10
 aee:	bf 92       	push	r11
 af0:	cf 92       	push	r12
 af2:	df 92       	push	r13
 af4:	ef 92       	push	r14
 af6:	ff 92       	push	r15
 af8:	0f 93       	push	r16
 afa:	1f 93       	push	r17
 afc:	cf 93       	push	r28
 afe:	df 93       	push	r29
 b00:	cd b7       	in	r28, 0x3d	; 61
 b02:	de b7       	in	r29, 0x3e	; 62
 b04:	ca 1b       	sub	r28, r26
 b06:	db 0b       	sbc	r29, r27
 b08:	0f b6       	in	r0, 0x3f	; 63
 b0a:	f8 94       	cli
 b0c:	de bf       	out	0x3e, r29	; 62
 b0e:	0f be       	out	0x3f, r0	; 63
 b10:	cd bf       	out	0x3d, r28	; 61
 b12:	09 94       	ijmp

00000b14 <__epilogue_restores__>:
 b14:	2a 88       	ldd	r2, Y+18	; 0x12
 b16:	39 88       	ldd	r3, Y+17	; 0x11
 b18:	48 88       	ldd	r4, Y+16	; 0x10
 b1a:	5f 84       	ldd	r5, Y+15	; 0x0f
 b1c:	6e 84       	ldd	r6, Y+14	; 0x0e
 b1e:	7d 84       	ldd	r7, Y+13	; 0x0d
 b20:	8c 84       	ldd	r8, Y+12	; 0x0c
 b22:	9b 84       	ldd	r9, Y+11	; 0x0b
 b24:	aa 84       	ldd	r10, Y+10	; 0x0a
 b26:	b9 84       	ldd	r11, Y+9	; 0x09
 b28:	c8 84       	ldd	r12, Y+8	; 0x08
 b2a:	df 80       	ldd	r13, Y+7	; 0x07
 b2c:	ee 80       	ldd	r14, Y+6	; 0x06
 b2e:	fd 80       	ldd	r15, Y+5	; 0x05
 b30:	0c 81       	ldd	r16, Y+4	; 0x04
 b32:	1b 81       	ldd	r17, Y+3	; 0x03
 b34:	aa 81       	ldd	r26, Y+2	; 0x02
 b36:	b9 81       	ldd	r27, Y+1	; 0x01
 b38:	ce 0f       	add	r28, r30
 b3a:	d1 1d       	adc	r29, r1
 b3c:	0f b6       	in	r0, 0x3f	; 63
 b3e:	f8 94       	cli
 b40:	de bf       	out	0x3e, r29	; 62
 b42:	0f be       	out	0x3f, r0	; 63
 b44:	cd bf       	out	0x3d, r28	; 61
 b46:	ed 01       	movw	r28, r26
 b48:	08 95       	ret

00000b4a <_exit>:
 b4a:	f8 94       	cli

00000b4c <__stop_program>:
 b4c:	ff cf       	rjmp	.-2      	; 0xb4c <__stop_program>
